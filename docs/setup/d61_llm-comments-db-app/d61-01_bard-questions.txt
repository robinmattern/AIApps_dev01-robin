c61_Integrate OpenAI GPT3 with a Database
-------------------------------------------------------------------------------
  import mysql from �mysql2/promise�;

//Modify the connection details to match the details specified while
//deploying the SingleStore workspace:

  const HOST     = 'svc-71fb4568-983a-46fl-blf7-782c75822474-dml.aws-oregon-4.svc.singlestore, com' ;
  const USER     = 'admin' ;
  const PASSWORD = 'YpCzMFiNYRwg20zEdFpgFplrLSJy4aYL';
  const DATABASE = 'singlestore';

//main is run at the end
  async function main() {
    let singleStoreConnection;
    try {
        singleStoreConnection = await mysql.createConnection(
          { host:     HOST
          , user:     USER
          , password: PASSWORD
          , database: DATABASE
            } );
        console.log("You have successfully connected to SingleStore.");

    } catch (err) {
        console.error('ERROR', err);
        process.exit(1);
    } finally {
        if (singleStoreConnection) {
            await singleStoreConnection.end();
            }
        }
    } // eof main

  main()



  # node .\db.js
  You have successfully connected to SingleStore.

----------------------------------------------------------------

 import dotenv from 'dotenv'; dotenv.config()
 import mysql  from 'mysql2/promise';

//main is run at the end
//----------------------------------------------------
async function main() {

    try {
    var pConnection = await mysql.createConnection(
          { host:     process.env.DB2_MYSQL_HOST
          , port:     3306 // Default MySQL port
          , user:     process.env.DB2_MYSQL_USER
          , password: process.env.DB2_MYSQL_PASSWORD
          , database: process.env.DB2_MYSQL_DATABASE
            } );
        console.log( `You have successfully connected to MySQL at ${process.env.DB1_MYSQL_HOST}.`);

    } catch (err) {
        console.error( `ERROR ${-err.errno}: ${err.message}` );
        process.exit(1);
    } finally {
        if (pConnection) {
            await pConnection.end();
            }
        }
    } // eof main
//----------------------------------------------------

        main()



----------------------------------------------------------------

## Integrate OpenAI GPT3 with a Database
I'm now going to implement this YouTube tutorial
 - **Title**: How to integrate OpenAI GPT3 with a Databases - Crash Course - [Video](https://www.youtube.com/watch?v=N4nX_rTwKx4)
 - **GitHub:** adriantwarog/youtube-comments-openai-gpt3 [Repo](https://github.com/adriantwarog/youtube-comments-openai-gpt3.git)


He goes through it pretty fast so I'm going to take screen captures and OCR the code in various steps.
The first step is to retreive comments from a YouTube video using Google's API.  I'll do that later.
The second step is to connect to a database.  He uses a cloud service named, singlestore.com, but
I am going to use a MySQL database located in a VM that I own in the cloud.

Here is my code for connecting to the remote MySQL DB.

     import dotenv from 'dotenv'; dotenv.config()
     import mysql  from 'mysql2/promise';

    //main is run at the end
    //----------------------------------------------------
    async function main() {

        try {
        var pConnection = await mysql.createConnection(
              { host:     process.env.DB2_MYSQL_HOST
              , port:     3306 // Default MySQL port
              , user:     process.env.DB2_MYSQL_USER
              , password: process.env.DB2_MYSQL_PASSWORD
              , database: process.env.DB2_MYSQL_DATABASE
                } );
            console.log( `You have successfully connected to MySQL at ${process.env.DB1_MYSQL_HOST}.`);

        } catch (err) {
            console.error( `ERROR ${-err.errno}: ${err.message}` );
            process.exit(1);
        } finally {
            if (pConnection) {
                await pConnection.end();
                }
            }
        } // eof main
    //----------------------------------------------------

            main()

But I getting this error after the main program ends.

    Uncaught Error Error: connect ETIMEDOUT

I changed the mysql2 import for just 'mysql2'
When the import was for import 'mysql2/promise', then it failed to connect to the IP Address of the
remote MySQL server.  I have connected to the server with these parameters in other apps.

Q3 --------------------------------------------------------------------------------------

So my script now looks like this:

     import dotenv from 'dotenv'; dotenv.config()
     import mysql  from 'mysql2/promise';

      async function create( { pConnection, pComment } ) {
    const [ results ] = await conn.execute(
           'INSERT INTO comments (commentid, commenter, comment, gpt, flag, respond) VALUES ( ?, ?, ?, ?, ?, ? )'
        , [ pComment.commentid, pComment.commenter, pComment.comment, pComment.gpt, pComment.flag, pComment.respond ]
            );
     return results.insertld;
            }
    //----------------------------------------------------

      async function main() {

        try {
        var pConnection = await mysql.createConnection(
              { host:     process.env.DB2_MYSQL_HOST
              , port:     3306 // Default MySQL port
              , user:     process.env.DB2_MYSQL_USER
              , password: process.env.DB2_MYSQL_PASSWORD
              , database: process.env.DB2_MYSQL_DATABASE
                } );
            console.log( `You have successfully connected to MySQL at ${process.env.DB1_MYSQL_HOST}.`);


      const id = await create( { pConnection, pComment:
              { commentid:  1
              , commenter: "Adrian Twarog"
              , comment  : "Why did the database go on a diet? It had too many tables!"
              , gpt      : ""
              , flag     :  0
              , respond  :  0
                }
              } );
            console.log( `Inserted row id is: ${id}.` );

        } catch (err) {
            console.error( `ERROR ${-err.errno}: ${err.message}` );
            process.exit(1);
        } finally {
            if (pConnection) {
                await pConnection.end();
                }
            }
        } // eof main
    //----------------------------------------------------

            await main()
            process.exit()

And I am getting this error:

        ERROR: TypeError: (intermediate value) is not iterable
            at create     (file:///E:/Repos/Robin/AIApps_/dev01-robin/client6/c61_llm-comments-db-app/01_db_v03.js:8:25)
            at async main (file:///E:/Repos/Robin/AIApps_/dev01-robin/client6/c61_llm-comments-db-app/01_db_v03.js:34:14)
            at async       file:///E:/Repos/Robin/AIApps_/dev01-robin/client6/c61_llm-comments-db-app/01_db_v03.js:58:3



Please assume that there is nothing wrong with connecting to the IP Address, (which you incorrectly refer to
as a DNS name requiring DNS resolution. Ping, MySQL Workbench and mysql all connect fine).
So you mention 5. Increase Timeout -- I not using that.  Can you rewrite my code to add that in and verify
correct usage of await and error handling.  Here is my code:

45.32.219.12.vultrusercontent.com
ERROR -1045: Access denied for user 'root'@'pool-100-7-10-20.rcmdva.fios.verizon.net' (using password: YES)
ERROR ENOTFOUND: getaddrinfo ENOTFOUND '45.32.219.12';

import dotenv from 'dotenv';
dotenv.config();
import mysql from 'mysql2/promise';

// main is run at the end
//----------------------------------------------------
async function main() {
  try {
    const connectionConfig = {
      host: process.env.DB2_MYSQL_HOST,
      port: 3306, // Default MySQL port
      user: process.env.DB2_MYSQL_USER,
      password: process.env.DB2_MYSQL_PASSWORD,
      database: process.env.DB2_MYSQL_DATABASE,
      connectTimeout: 10000, // Added connection timeout (10 seconds)
    };

    const pConnection = await mysql.createConnection(connectionConfig);
    console.log(`You have successfully connected to MySQL at ${process.env.DB2_MYSQL_HOST}.`);

    // ... rest of your code using the connection ...

  } catch (err) {
    console.error(`ERROR ${err.code || err.errno}: ${err.message}`); // Use code or errno for clarity
    if (err.code === 'ETIMEDOUT') {
      console.error('Connection timed out. Consider increasing the timeout or checking network connectivity.');
    }
    process.exit(1);
  } finally {
    if (pConnection) {
      await pConnection.end();
    }
  }
} // eof main
//----------------------------------------------------

main();


npm cache clean --force
npm install mysql2/promise --registry=https://registry.npmjs.org

https://g.co/bard/share/51c7ebe1d626


CREATE TABLE comments(
  id        INT AUTO-INCREMENT KEY,
  commentid VARCHAR(64),
  commenter VARCHAR(64),
  comment   VARCHAR(512),
  gpt       VARCHAR(512),
  flag      INT(1),
  respond   INT(1)
  )

https://console.cloud.google.com/welcome?project=aiapps-dev01-robin





    `$ node 03_ai_v02-updateDB-byGPT.js`
        Processing 100 comments.
        Comment Id 618 response: No
        Comment Id 619 response: No
        Comment Id 620 response: Yes
        Comment Id 620 updated
        Failed to process pOpenAI.createCompletion
        ERROR NaN: Request failed with status code 429

    `$ node 03_ai_v02-updateDB-byGPT.js`
        Processing 100 comments.
        Failed to process pOpenAI.createCompletion
        ERROR NaN: Request failed with status code 429